<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>软件开发 on 半生不熟 | Amber</title>
    <link>https://wdanna.com/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/</link>
    <description>Recent content in 软件开发 on 半生不熟 | Amber</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Tue, 06 Dec 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wdanna.com/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git 入门篇</title>
      <link>https://wdanna.com/posts/blog/2016-12/git-%E5%85%A5%E9%97%A8%E7%AF%87/</link>
      <pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wdanna.com/posts/blog/2016-12/git-%E5%85%A5%E9%97%A8%E7%AF%87/</guid>
      <description>1、读音 本人一直对技术词汇的发音有不可描述的强迫症现象，所以还是先来聊一聊它的发音。 曾经偶尔不止一次地听到身边有人看着Git叫“鸡特”（谐音），从一开始的满脸懵逼到最后竟笑出了声&amp;hellip; 我觉得作为一个程序不管是猿还是媛，为了避免引起其他猿或者是媛莫名发笑，为了避=避免被一群诧异的眼光注视，为了避免在跟别人讨论技术问题的时候被人揪着发音不放，还是确保你的发音准确吧。 忘掉“鸡特”，记住“给特”</description>
    </item>
    
    <item>
      <title>神奇的 Linux 命令行</title>
      <link>https://wdanna.com/posts/blog/2016-11/%E7%A5%9E%E5%A5%87%E7%9A%84-linux-%E5%91%BD%E4%BB%A4%E8%A1%8C/</link>
      <pubDate>Sat, 19 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wdanna.com/posts/blog/2016-11/%E7%A5%9E%E5%A5%87%E7%9A%84-linux-%E5%91%BD%E4%BB%A4%E8%A1%8C/</guid>
      <description>1、命令行真的好吗 * 维基百科的解释 &amp;gt;命令行界面（英语：command-line interface，缩写：CLI）是在图形用户界面得到普及之前使用最为广泛的用户界面，它通常不支持鼠标，用户通过键盘输入指令，计算机接收到指令后，予以执行。也有人称之为字符用户界面（CUI）。 * 也有人这样说 &amp;gt;熟练使用命令行是一种常常被忽视，或被认为难以掌握的技能，但实际上，它会提高你作为工程师的灵活性以及生产</description>
    </item>
    
    <item>
      <title>Ubuntu 安装 mongoDB 报错</title>
      <link>https://wdanna.com/posts/blog/ubuntu%E5%AE%89%E8%A3%85mongodb%E6%8A%A5%E9%94%99/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wdanna.com/posts/blog/ubuntu%E5%AE%89%E8%A3%85mongodb%E6%8A%A5%E9%94%99/</guid>
      <description>一、安装步骤一切ok 启动时 $ sudo service mongodb start #报错 couldn&#39;t connect to server 127.0.0.1:27017 (127.0.0.1), connection attempt failed at src/mongo/shell/mongo.js:146 #停止时 $ sudo service mongodb stop #报错 unknown instance 搜了下有人这样解决了： Step 1: Remove lock file.sudo rm /var/lib/mongodb/mongod.lock Step 2: Repair mongodb. sudo mongod &amp;ndash;repair Step 3: start mongodb.sudo start mongodb orsudo service mongodb start Step 4: Check status of mongodb.sudo status mongodb or sudo service mongodb status Step 5: Start mongo console.mongo 但我也试了，却没有解决&amp;hellip; 卸载之前装的mongodb $ sudo apt-get purge mongodb-org $ sudo apt-get autoremoveRemove the old mongodb.list you created $ sudo rm /etc/apt/sources.list.d/mongodb.list 准备重新安装，由失败到成功，整理了一下： 执行命令 sudo apt-get install mongodb-server 进入目录 vim ~/.bashrc 添加此句 $ export PATH=/home/yhl/mongodb-linux/bin:$PATH 查看版本号 $ mongod -version $ mkdir</description>
    </item>
    
    <item>
      <title>你不知道 Ubuntu 我来告诉你</title>
      <link>https://wdanna.com/posts/blog/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93ubuntu%E6%88%91%E6%9D%A5%E5%91%8A%E8%AF%89%E4%BD%A0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wdanna.com/posts/blog/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93ubuntu%E6%88%91%E6%9D%A5%E5%91%8A%E8%AF%89%E4%BD%A0/</guid>
      <description>1、起源 发音—国际音标：英语发音：/ʊˈbʊntuː/ 由马克·舍特尔沃斯创立，其首个版本—4.10发布于2004年10月20日。 其名称来自非洲南部祖鲁语或科萨语的“ubuntu”一词（译为乌班图），意思是“人性”、“我的存在是因为大家的存在”，是非洲传统的一种价值观 独立之精神，自由之思想—与大家共勉，向开源致敬。 2、与Linux的关系 首先还是发音，有人这样调侃—Linux是自由的，包括它的发音 很庆</description>
    </item>
    
    <item>
      <title>修改文件要不要重启 - 一期考试系统</title>
      <link>https://wdanna.com/posts/blog/%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E8%A6%81%E4%B8%8D%E8%A6%81%E9%87%8D%E5%90%AF-%E4%B8%80%E6%9C%9F%E8%80%83%E8%AF%95%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wdanna.com/posts/blog/%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E8%A6%81%E4%B8%8D%E8%A6%81%E9%87%8D%E5%90%AF-%E4%B8%80%E6%9C%9F%E8%80%83%E8%AF%95%E7%B3%BB%E7%BB%9F/</guid>
      <description>需要修改一期项目中的代码了,之前每次都是用&amp;rdquo;试一下&amp;rdquo;的方式得出要不要启动,现在总结下哪些情况需要启动什么 1、首先再熟悉下每条命令的作用 * docker-compose up -d —将会在后台启动并运行所有的容器 * docker-compose stop —停止一个已经运行的容器，但不删除它，可通过docker-compose start重新启动它 * docker exec -it XX bash —方便用户在容器之外让容器执行指定的命令 * docker logs XX —查看XX容器的日志 2、启动 * 修改前台代码 包</description>
    </item>
    
    <item>
      <title>我来项目一周了</title>
      <link>https://wdanna.com/posts/blog/%E6%88%91%E6%9D%A5%E9%A1%B9%E7%9B%AE%E4%B8%80%E5%91%A8%E4%BA%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wdanna.com/posts/blog/%E6%88%91%E6%9D%A5%E9%A1%B9%E7%9B%AE%E4%B8%80%E5%91%A8%E4%BA%86/</guid>
      <description>6月26，是第一天正式去公司实习的日子。￼ 还记得那件可笑的事。25晚上都十一点了，翻聊天记录才发现HR姐姐要的身份证复印件学生证复印件银行卡复印件居然都没有印！！！重点是还忘得一干二净，丝毫不记得。我个猪脑子，居然会把这么重要的事忘记加到清单里。 当时我就慌了，大晚上的，刚搬来住的地方，一个人人生地不熟的，白天在附近都没有看到有复印店，况且，那会儿都十一点多了，幸好幸好的是，我告诉了箫声远，就是吐槽</description>
    </item>
    
    <item>
      <title>教师出题流程</title>
      <link>https://wdanna.com/posts/blog/%E6%95%99%E5%B8%88%E5%87%BA%E9%A2%98%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wdanna.com/posts/blog/%E6%95%99%E5%B8%88%E5%87%BA%E9%A2%98%E6%B5%81%E7%A8%8B/</guid>
      <description>paper-maker出题流程 1、教师填好题目的相关信息（name、 type、Github地址（包括script.sh脚本文件、templeteRepo(基于这么模板做题)、readme.md(题目描述) ））后点击保存按钮后 2、添加一个字段status，默认值为1（保存按钮为pending状态），将这四个字段保存至mongo中，并给前台返回一个_id字段，前台应将这个_id通过replace的方法</description>
    </item>
    
    <item>
      <title>软链接与硬链接</title>
      <link>https://wdanna.com/posts/blog/%E8%BD%AF%E9%93%BE%E6%8E%A5%E4%B8%8E%E7%A1%AC%E9%93%BE%E6%8E%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wdanna.com/posts/blog/%E8%BD%AF%E9%93%BE%E6%8E%A5%E4%B8%8E%E7%A1%AC%E9%93%BE%E6%8E%A5/</guid>
      <description>1. 是什么 链接：一种在共享文件和访问它的用户的若干目录项之间建立联系的一种方法。 【硬链接】（hard link）：指通过索引节点来进行连接，就是一个文件(不是文件夹)的别名，无论有多少各别名，但它其实是一个文件。 可以这样理解： &amp;gt;一面墙上有一个洞，洞里放着一个苹果。从墙的这一面看是这个苹果，从墙的另一面看还是同一个苹果 &amp;gt;也就是说同一块数据但有两个不同的名字，读写的时候本质上都是修改的同一块数</description>
    </item>
    
  </channel>
</rss>